cinitramfs() {
  cd "$1"
  strip bin/busybox
  strip --strip-debug lib/*.so*
  find . -d | cpio -o -H newc | ${3-xz -z --check=crc32 --x86 --lzma2=preset=8e,nice=273} > "${2-../initrd}"
}

_find_decompressor() {
  _decomp=$(file $1| grep compressed | cut -f 2 -d ":" | cut -f 2 -d " ")
  if [ $_decomp ]; then _decomp+=" -cd"; else _decomp=cat; fi
}

xinitramfs() {
  _find_decompressor $1
  set -- "$(readlink -e "$1")" ${2-$1.unpacked}
  mkdir "$2"; cd "$2"
  ${_decomp/XZ/xz} $1 | cpio -i
}

busyboxdup() {
  local i j
  pushd "$1/bin" || return 1
  ./busybox --list | {
    while read j; do
      for i in *; do [ "$i" == "$j" ] && echo "$i "; done
    done
  } > /tmp/keep
  for i in $(cat /tmp/keep); do
    echo $i
    while read -n 1 -ep "Keep original $i instead of busybox symlink? y/n" j; do
      [ "$j" == n ] && break
      [ "$j" == y ] && echo "$j" >> .keep && break
    done
  done
  popd
}

busyboxln() {
  local i
  pushd "$1/bin" || return 1
  ./busybox --list | {
    while read i; do
      [ -e "$i" ] && grep -Fx "$i" .keep && break
      rm -- "$i"
      ln -sf busybox "$i"
    done
  }
}
# For Non-GNU Systems
_readlink() {
  _rl_help() {
    printf "readlink, follows and reads links.\n readlink [-e] foo"
  }
  [ "$1" == "--help" ] && _rl_help; return 0 
  [ "$1" == "-e" ] && shift 
  if ! [ $1 ]; then _rl_help >&2; return 1; fi
  echo "$(cd "$(dirname "$1")" && pwd)"
}
(which readlink &>/dev/null) || alias readlink='_readlink'

# For those so-called chuunibyou
# DO IT YOUSELF, make them look like lsbinfo and lsbgen
osinfo() {
  
}

osgen() {
  
}
